% Purpose of this file: to read input files, then truncate the file by the user specified lenghth, 
% and resample the signal according to the sampling frequency of the RIR

computed_rir = load('Computed_RIRs.mat'); % always call this before you start, because you need the sampling frequency of the RIR

% User defined variables
lenMicSig = 5; % length of desired microphone signal in seconds
fs_source = [0 0 0 0];

[source_speech1,fs_source(1)] = audioread('speech1.wav');
[source_speech2,fs_source(2)] = audioread('speech2.wav');
[source_noise1,fs_source(3)] = audioread('Babble_noise1.wav');
[source_noise2,fs_source(4)] = audioread('White_noise1.wav');

source_speech1 = resample(source_speech1,computed_rir.fs_RIR,fs_source(1));
source_speech2 = resample(source_speech2,computed_rir.fs_RIR,fs_source(2));
source_noise1 = resample(source_noise1,computed_rir.fs_RIR,fs_source(3));
source_noise1 = resample(source_noise1,computed_rir.fs_RIR,fs_source(4));

samplesToKeep = fs_RIR.*lenMicSig;
source_speech1 = source_speech1(1 : samplesToKeep);
source_speech2 = source_speech2(1 : samplesToKeep);
source_noise1 = source_noise1(1 : samplesToKeep);
source_noise2 = source_noise2(1 : samplesToKeep);

mic = zeros(length(RIR_sources),length(m_pos));
mic(:,1) = 



